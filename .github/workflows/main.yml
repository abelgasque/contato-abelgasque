name: Build and Deploy template cv next
on:
  push:
    branches:
      - template/next

jobs:
  build:
    name: Build and Deploy template cv next
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build --platform=linux/amd64
          -t ${{ secrets.DOCKER_USERNAME }}/template-cv-next:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/template-cv-next:latest

  report-status:
    name: Report Build Status
    needs: build
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Github", "content": "‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Github", "content": "‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}